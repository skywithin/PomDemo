@page "/servers/add"

@inject NavigationManager NavigationManager
@inject IServersEfCoreRepository ServersRepository;

<h3>Create Server</h3>
<br />
<br />

<EditForm Model="server" FormName="form_AddServer" OnValidSubmit="Submit">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div class="row mb-3">
		<div class="col-2">
			<label class="col-form-label">Name</label>
		</div>
		<div class="col-6">
			<InputText @bind-Value="server.Name" class="form-control" />
		</div>
		<div class="col">
			<ValidationMessage For="() => server.Name" />
		</div>
	</div>

	<div class="row mb-3">
		<div class="col-2">
			<label class="col-form-label">City</label>
		</div>
		<div class="col-6">
			<InputSelect @bind-Value="server.City" class="form-select">
				<option value="">Select a city</option>
				@foreach (var city in CitiesRepository.GetCities())
				{
					<option value="@city">@city</option>
				}
			</InputSelect>
		</div>
		<div class="col">
			<ValidationMessage For="() => server.City" />
		</div>
	</div>

	<div class="row mb-3">
		<div class="col-2">
			<label class="col-form-label">Online</label>
		</div>
		<div class="col-6">
			<InputCheckbox @bind-Value="server.IsOnline" class="form-check-input" />
		</div>
	</div>

	<ValidationSummary />
	<br />
	<button type="submit" class="btn btn-primary">Add</button>
	&nbsp;
	<a href="/servers" class="btn btn-primary">Back</a>
</EditForm>

@code {
	[SupplyParameterFromForm(FormName = "form_AddServer")]
	private Server server { get; set; } = new Server { IsOnline = false };

	private async Task Submit()
	{
		ServersRepository.AddServer(server);

		NavigationManager.NavigateTo($"/servers/city/{server?.City}");
	}
}
