@inject NavigationManager NavigationManager

@if (servers?.Any() == true)
{
	<ul>
		<Virtualize Items="servers" Context="server">
			<li @key="server.Id">
				@($"{server.Name} ({server.City}) is {(server.IsOnline ? "online" : "offline")}")
				&nbsp;
				<a href="/servers/edit/@server.Id" class="btn btn-link">Edit</a>
				&nbsp;
				<EditForm Model="server"
						  FormName="@($"form_DeleteServer_{server.Id}")"
						  OnValidSubmit="@(() => { DeleteServer(server.Id); })">
					<button type="submit" class="btn btn-primary">Delete</button>
				</EditForm>
			</li>
		</Virtualize>
	</ul>
}

@code {
	[Parameter]
	public string? SelectedCity { get; set; }

	private List<Server>? servers;

	protected override void OnParametersSet()
	{
		servers = 
			!string.IsNullOrEmpty(SelectedCity)
				? ServersRepository.GetServersByCity(SelectedCity)
				: ServersRepository.GetServers();
	}

	private void DeleteServer(int serverId)
	{
		ServersRepository.DeleteServer(serverId);
		//NavigationManager.NavigateTo("/servers", forceLoad: true);
	}
}
