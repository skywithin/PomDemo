@inject TorontoOnlineServersStore TorontoOnlineServersStore

@if (!string.IsNullOrEmpty(City))
{
	<div class="col">
		<div class='card @(this.City == SelectedCity ? "border-primary" : null)'>
			<img class="card-img-top" src="@($"/images/{this.City}.png")" alt="@this.City">
			<div class="card-body">
				<button type="button" class="btn btn-primary" @onclick="@(() => { SelectCity(this.City); })">@this.City</button>
			</div>
			<div>
				@if (this.City.Equals("Toronto", StringComparison.OrdinalIgnoreCase))
				{
					<text>@numberOfServersOnlineToronto</text>
				}
			</div>
		</div>
	</div>
}


@code {
	[Parameter]
	public string? City { get; set; }

	[Parameter]
	public string SelectedCity { get; set; } = "";

	[Parameter]
	public EventCallback<string> SelectCityCallback { get; set; }

	private int numberOfServersOnlineToronto = 0;

	private void SelectCity(string cityName)
	{
		SelectCityCallback.InvokeAsync(cityName);
	}

	protected override void OnAfterRender(bool firstRender)
	{
		if (firstRender)
		{
			numberOfServersOnlineToronto = TorontoOnlineServersStore.GetNumServersOnline();
			TorontoOnlineServersStore.Subscribe(OnServersStatusChanged);
			StateHasChanged();
		}
	}

	private void OnServersStatusChanged()
	{
		numberOfServersOnlineToronto = TorontoOnlineServersStore.GetNumServersOnline();
		StateHasChanged();
	}
}
